{
  "annotations": {
    "list": [
      {
        "datasource": "climato_db",
        "enable": false,
        "iconColor": "red",
        "name": "Annotations climato_db",
        "rawQuery": "SELECT\n  extract(epoch from time) AS time,\nextract(epoch from timeend ) AS timeend ,\n  text,\n  tags\nFROM\n annotations\nWHERE\n  $__timeFilter(time)\n"
      },
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 13,
  "iteration": 1654337434576,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "text",
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 6,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "max"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "min"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 20,
        "x": 0,
        "y": 0
      },
      "id": 9,
      "options": {
        "legend": {
          "calcs": [
            "count"
          ],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "s7C5SaQnz"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n  timescaledb_experimental.time_bucket_ng('$bucket', ss.date)::timestamp as time,\n  max(ss.max) as max\n  from\n(select\n  e.date,\n  e.max,\n  e.max_time,\n  rank() over (partition by timescaledb_experimental.time_bucket_ng('$bucket', e.date) order by e.max desc) as pos\n from extremes e\n  join mesures m on m.id = e.mesure_id\nwhere m.json_input = '$mesure_avg'\n   and poste_id = $station\n ) as ss\nwhere pos <= 1\ngroup by 1;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "min"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "extremes",
          "timeColumn": "min_time",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "s7C5SaQnz"
          },
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n  timescaledb_experimental.time_bucket_ng('$bucket', ss.date)::timestamp as time,\n  min(ss.min) as min\n  from\n(select\n  e.date,\n  e.min,\n  e.min_time,\n  rank() over (partition by timescaledb_experimental.time_bucket_ng('$bucket', e.date) order by e.min) as pos\n from extremes e\n  join mesures m on m.id = e.mesure_id\nwhere m.json_input = '$mesure_avg'\n   and poste_id = $station\n ) as ss\nwhere pos <= 1\ngroup by 1;\n",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "min"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "extremes",
          "timeColumn": "min_time",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "s7C5SaQnz"
          },
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  timescaledb_experimental.time_bucket_ng('$bucket', time) AS time,\n  avg($mesure_avg) as $mesure_avg\nFROM obs_day\nWHERE\n  $__timeFilter(time)\n  and poste_id = $station\nGroup by 1\nORDER BY 1",
          "refId": "C",
          "select": [
            [
              {
                "params": [
                  "min"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "extremes",
          "timeColumn": "min_time",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Extremes des $mesure_avg by $bucket for $station",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 20,
        "x": 0,
        "y": 11
      },
      "id": 4,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "s7C5SaQnz"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  timescaledb_experimental.time_bucket_ng('$bucket', time) AS time,\n  avg($mesure_avg) as $mesure_avg\nFROM obs_day\nWHERE\n  $__timeFilter(time)\n  and poste_id = $station\nGroup by 1\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "poste",
          "timeColumn": "start_dat",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "s7C5SaQnz"
          },
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  timescaledb_experimental.time_bucket_ng('$bucket', time) AS time,\n  avg($mesure_avg2) as $mesure_avg2\nFROM obs_day\nWHERE\n  $__timeFilter(time)\n  and poste_id = $station\n  and $mesure_avg != $mesure_avg2\nGroup by 1\nORDER BY 1",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "min"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "extremes",
          "timeColumn": "min_time",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Comparaison $mesure_avg-$mesure_avg2 for $station",
      "type": "timeseries"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 20,
        "x": 0,
        "y": 22
      },
      "id": 2,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "s7C5SaQnz"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  timescaledb_experimental.time_bucket_ng('$bucket', time) AS time,\n  sum($mesure_sum) as $mesure_sum\nFROM obs_day\nWHERE\n  $__timeFilter(time)\n  and poste_id = $station\nGroup by 1\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "poste",
          "timeColumn": "start_dat",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Valeur somme: $mesure_sum for $station",
      "type": "barchart"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 16,
        "w": 9,
        "x": 0,
        "y": 32
      },
      "id": 6,
      "options": {
        "basemap": {
          "config": {},
          "name": "Layer 0",
          "type": "osm-standard"
        },
        "controls": {
          "mouseWheelZoom": true,
          "showAttribution": true,
          "showDebug": false,
          "showScale": false,
          "showZoom": true
        },
        "layers": [
          {
            "config": {
              "showLegend": true,
              "style": {
                "color": {
                  "fixed": "dark-green"
                },
                "opacity": 0.4,
                "rotation": {
                  "fixed": 0,
                  "max": 360,
                  "min": -360,
                  "mode": "mod"
                },
                "size": {
                  "fixed": 5,
                  "max": 15,
                  "min": 2
                },
                "symbol": {
                  "fixed": "img/icons/marker/cross.svg",
                  "mode": "fixed"
                },
                "text": {
                  "field": "meteor",
                  "fixed": "",
                  "mode": "field"
                },
                "textConfig": {
                  "fontSize": 12,
                  "offsetX": 0,
                  "offsetY": 0,
                  "textAlign": "center",
                  "textBaseline": "middle"
                }
              }
            },
            "location": {
              "latitude": "lat",
              "longitude": "long",
              "mode": "coords"
            },
            "name": "Layer 1",
            "tooltip": true,
            "type": "markers"
          }
        ],
        "view": {
          "id": "coords",
          "lat": -21,
          "lon": 55.5,
          "zoom": 11
        }
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "s7C5SaQnz"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select meteor, lat, long from postes",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "min"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "extremes",
          "timeColumn": "mintime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Stations",
      "type": "geomap"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "noValue": "--",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "dark-blue",
                "value": 10
              },
              {
                "color": "dark-green",
                "value": 15
              },
              {
                "color": "dark-yellow",
                "value": 20
              },
              {
                "color": "dark-orange",
                "value": 25
              },
              {
                "color": "dark-red",
                "value": 30
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 17,
        "w": 9,
        "x": 12,
        "y": 32
      },
      "id": 7,
      "options": {
        "basemap": {
          "config": {},
          "name": "Layer 0",
          "type": "osm-standard"
        },
        "controls": {
          "mouseWheelZoom": true,
          "showAttribution": true,
          "showDebug": false,
          "showScale": false,
          "showZoom": true
        },
        "layers": [
          {
            "config": {
              "showLegend": true,
              "style": {
                "color": {
                  "fixed": "text"
                },
                "opacity": 0.4,
                "rotation": {
                  "fixed": 0,
                  "max": 360,
                  "min": -360,
                  "mode": "mod"
                },
                "size": {
                  "fixed": 5,
                  "max": 15,
                  "min": 2
                },
                "symbol": {
                  "fixed": "img/icons/marker/circle.svg",
                  "mode": "fixed"
                },
                "text": {
                  "field": "meteor",
                  "fixed": "",
                  "mode": "field"
                },
                "textConfig": {
                  "fontSize": 12,
                  "offsetX": 0,
                  "offsetY": 10,
                  "textAlign": "center",
                  "textBaseline": "top"
                }
              }
            },
            "location": {
              "latitude": "lat",
              "longitude": "long",
              "mode": "coords"
            },
            "name": "id poste",
            "tooltip": true,
            "type": "markers"
          },
          {
            "config": {
              "showLegend": true,
              "style": {
                "color": {
                  "fixed": "dark-green"
                },
                "opacity": 0.2,
                "rotation": {
                  "fixed": 0,
                  "max": 360,
                  "min": -360,
                  "mode": "mod"
                },
                "size": {
                  "fixed": 4,
                  "max": 15,
                  "min": 2
                },
                "symbol": {
                  "fixed": "img/icons/marker/circle.svg",
                  "mode": "fixed"
                },
                "text": {
                  "field": "out_temp",
                  "fixed": "",
                  "mode": "field"
                },
                "textConfig": {
                  "fontSize": 20,
                  "offsetX": 0,
                  "offsetY": -20,
                  "textAlign": "center",
                  "textBaseline": "middle"
                }
              }
            },
            "location": {
              "latitude": "lat",
              "longitude": "long",
              "mode": "coords"
            },
            "name": "out_temp",
            "tooltip": true,
            "type": "markers"
          }
        ],
        "view": {
          "id": "coords",
          "lat": -21,
          "lon": 55.5,
          "shared": true,
          "zoom": 10
        }
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "s7C5SaQnz"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select p.meteor, p.lat, p.long, p.last_obs_date, o.out_temp, o.rain\nfrom postes p join obs o on o.id = p.last_obs_id\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "min"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "extremes",
          "timeColumn": "mintime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Dernières valeurs de temp/pluie",
      "type": "geomap"
    }
  ],
  "refresh": "",
  "schemaVersion": 35,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "BBF015",
          "value": "2"
        },
        "datasource": {
          "type": "postgres",
          "uid": "s7C5SaQnz"
        },
        "definition": "select id as __value, meteor as __text from postes order by meteor",
        "hide": 0,
        "includeAll": false,
        "label": "station",
        "multi": false,
        "name": "station",
        "options": [],
        "query": "select id as __value, meteor as __text from postes order by meteor",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": "1 month",
          "value": "1 month"
        },
        "hide": 0,
        "includeAll": false,
        "label": "bucket",
        "multi": false,
        "name": "bucket",
        "options": [
          {
            "selected": false,
            "text": "1 day",
            "value": "1 day"
          },
          {
            "selected": false,
            "text": "3 days",
            "value": "3 days"
          },
          {
            "selected": false,
            "text": "1 week",
            "value": "1 week"
          },
          {
            "selected": false,
            "text": "2 weeks",
            "value": "2 weeks"
          },
          {
            "selected": true,
            "text": "1 month",
            "value": "1 month"
          },
          {
            "selected": false,
            "text": "3 months",
            "value": "3 months"
          },
          {
            "selected": false,
            "text": "4 months",
            "value": "4 months"
          },
          {
            "selected": false,
            "text": "6 months",
            "value": "6 months"
          },
          {
            "selected": false,
            "text": "1 year",
            "value": "1 year"
          },
          {
            "selected": false,
            "text": "2 years",
            "value": "2 years"
          },
          {
            "selected": false,
            "text": "3 years",
            "value": "3 years"
          },
          {
            "selected": false,
            "text": "5 years",
            "value": "5 years"
          }
        ],
        "query": "1 day, 3 days, 1 week, 2 weeks, 1 month, 3 months, 4 months, 6 months, 1 year, 2 years, 3 years, 5 years",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": true,
          "text": "barometer",
          "value": "barometer"
        },
        "datasource": {
          "type": "postgres",
          "uid": "s7C5SaQnz"
        },
        "definition": "select name as __text, json_input as __value from mesures where is_avg = True and json_input not like '%_dir' order by name",
        "hide": 0,
        "includeAll": false,
        "label": "avg no 1",
        "multi": false,
        "name": "mesure_avg",
        "options": [],
        "query": "select name as __text, json_input as __value from mesures where is_avg = True and json_input not like '%_dir' order by name",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": "pressure",
          "value": "pressure"
        },
        "definition": "select name as __text, json_input as __value from mesures where is_avg = True and json_input not like '%_dir' order by name",
        "hide": 0,
        "includeAll": false,
        "label": "avg no 2",
        "multi": false,
        "name": "mesure_avg2",
        "options": [],
        "query": "select name as __text, json_input as __value from mesures where is_avg = True and json_input not like '%_dir' order by name",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": "rain",
          "value": "rain"
        },
        "datasource": {
          "type": "postgres",
          "uid": "s7C5SaQnz"
        },
        "definition": "select name as __text, json_input as __value from mesures where is_avg = False order by name",
        "hide": 0,
        "includeAll": false,
        "label": "sum",
        "multi": false,
        "name": "mesure_sum",
        "options": [],
        "query": "select name as __text, json_input as __value from mesures where is_avg = False order by name",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-5y",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Climato",
  "uid": "5ahcI-Q7k",
  "version": 71,
  "weekStart": ""
}