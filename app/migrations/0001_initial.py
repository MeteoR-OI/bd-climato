# Generated by Django 4.2.6 on 2023-12-16 19:30

import app.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('time', app.models.DateTimeFieldNoTZ(max_length=30, verbose_name="date'")),
                ('timeend', app.models.DateTimeFieldNoTZ(max_length=30, verbose_name="date'")),
                ('text', models.CharField(max_length=100, verbose_name='source')),
                ('tags', models.CharField(max_length=100, verbose_name='source')),
            ],
            options={
                'db_table': 'annotations',
            },
        ),
        migrations.CreateModel(
            name='Extreme',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date_local', models.DateField(verbose_name="date locale de l'extrême")),
                ('min', models.FloatField(null=True, verbose_name='valeur minimum')),
                ('min_time', app.models.DateTimeFieldNoTZ(null=True, verbose_name='date du minimum')),
                ('max', models.FloatField(null=True, verbose_name='valeur maximum')),
                ('max_time', app.models.DateTimeFieldNoTZ(null=True, verbose_name='date du maximum')),
                ('max_dir', models.SmallIntegerField(null=True, verbose_name='direction du maximum')),
            ],
            options={
                'db_table': 'extremes',
            },
        ),
        migrations.CreateModel(
            name='HistoExtremes',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('src_min_obs_id', models.BigIntegerField(null=True, verbose_name='obs_id source')),
                ('src_max_obs_id', models.BigIntegerField(null=True, verbose_name='obs_id source')),
                ('target_x_id', models.BigIntegerField(verbose_name='extreme_id modifiée')),
            ],
            options={
                'db_table': 'histo_extreme',
            },
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_utc', app.models.DateTimeFieldNoTZ(max_length=30, verbose_name='date')),
                ('source', models.CharField(max_length=100, verbose_name='source')),
                ('level', models.CharField(max_length=20, verbose_name='niveau')),
                ('reason', models.TextField(verbose_name='raison')),
                ('details', models.JSONField(default=dict, verbose_name='details')),
                ('active', models.BooleanField(default=True, null=True, verbose_name='active')),
            ],
            options={
                'db_table': 'incidents',
            },
        ),
        migrations.CreateModel(
            name='Mesure',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la mesure')),
                ('json_input', models.CharField(max_length=20, verbose_name='Clé utilisée dans le json')),
                ('json_input_bis', models.CharField(max_length=20, null=True, verbose_name='Autre clé utilisée dans le json')),
                ('archive_col', models.CharField(max_length=20, verbose_name='nom colonne table weewx.archive')),
                ('archive_table', models.CharField(default=None, max_length=20, null=True, verbose_name='nom table weewx.archive')),
                ('field_dir', models.SmallIntegerField(null=True, verbose_name='id de la mesure wind dans table weewx.archive')),
                ('val_deca', models.SmallIntegerField(default=0, null=True, verbose_name='Décalage mesure')),
                ('max', models.BooleanField(default=True, null=True, verbose_name='Calcul des max')),
                ('max_deca', models.SmallIntegerField(default=0, null=True, verbose_name='Décalage du max')),
                ('min', models.BooleanField(default=True, null=True, verbose_name='Calcul des min')),
                ('min_deca', models.SmallIntegerField(default=0, null=True, verbose_name='Décalage du min')),
                ('is_avg', models.BooleanField(default=True, null=True, verbose_name='Calcul de moyenne')),
                ('is_wind', models.BooleanField(default=False, null=True, verbose_name='Calcul du wind_dir')),
                ('omm_link', models.SmallIntegerField(default=0, null=True, verbose_name='Lien entre mesure OMM et mesure de base')),
                ('allow_zero', models.BooleanField(default=True, null=True, verbose_name='Zero est une valeur valide')),
                ('is_hourly', models.BooleanField(default=False, null=True, verbose_name='Must be agregated by hour(s) or more, not less')),
            ],
            options={
                'db_table': 'mesures',
            },
        ),
        migrations.CreateModel(
            name='Poste',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('meteor', models.CharField(max_length=10, verbose_name='Code station')),
                ('delta_timezone', models.SmallIntegerField(verbose_name='delta heure locale et UTC')),
                ('data_source', models.SmallIntegerField(verbose_name='Data Source: 0 meteoire, 1 meteofr,..')),
                ('type', models.CharField(default='', max_length=50, null=True, verbose_name='Type de station')),
                ('altitude', models.FloatField(default=0, null=True, verbose_name='Altitude')),
                ('lat', models.FloatField(default=0, null=True, verbose_name='Latitude')),
                ('long', models.FloatField(default=0, null=True, verbose_name='Longitude')),
                ('info', models.JSONField(default=dict, null=True, verbose_name='autre info station')),
                ('load_dump', models.BooleanField(default=False, null=True, verbose_name='Charge les donnees a partir des dumps')),
                ('load_raw_data', models.BooleanField(default=False, null=True, verbose_name='Charge les donnees a partir des donnees brutes')),
                ('pause_raw_data', models.BooleanField(default=False, null=True, verbose_name='Ne traite pas les fichiers Jsde donnees brutes')),
                ('other_code', models.CharField(default='', max_length=50, null=True, verbose_name='Nom clair de la station')),
                ('owner', models.CharField(default='', max_length=50, null=True, verbose_name='Propriétaire')),
                ('email', models.CharField(default='', max_length=50, null=True, verbose_name='E-Mail')),
                ('phone', models.CharField(default='', max_length=50, null=True, verbose_name='Téléphone')),
                ('quartier', models.CharField(default='', max_length=50, null=True, verbose_name='Addresse')),
                ('city', models.CharField(default='', max_length=50, null=True, verbose_name='Ville')),
                ('country', models.CharField(default='', max_length=50, null=True, verbose_name='Payse')),
                ('comment', models.TextField(default='', null=True)),
                ('last_obs_date', app.models.DateTimeFieldNoTZ(default='2000-01-01T00:00:00', null=True, verbose_name='Datetime locale de derniere reception de donnees')),
                ('last_obs_id', models.BigIntegerField(default=0, null=True, verbose_name='ID obs de la derniere reception de donnees')),
                ('last_extremes_date', app.models.DateTimeFieldNoTZ(default='2000-01-01T00:00:00', null=True, verbose_name='Datetime locale de dernier record')),
                ('last_extremes_id', models.BigIntegerField(default=0, null=True, verbose_name='ID du dernier record')),
            ],
            options={
                'db_table': 'postes',
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name="id de l'observation")),
                ('date_local', app.models.DateTimeFieldNoTZ(verbose_name='datetime locale fin période observation')),
                ('date_utc', app.models.DateTimeFieldNoTZ(verbose_name='datetime UTC fin période observation')),
                ('duration', models.SmallIntegerField(default=0, null=True, verbose_name='durée mesure')),
                ('value', models.FloatField(verbose_name='pression niveau mer')),
                ('qa_value', models.SmallIntegerField(default=0, null=True, verbose_name='pression niveau mer')),
                ('mesure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.mesure')),
                ('poste', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.poste')),
            ],
            options={
                'db_table': 'obs',
            },
        ),
        migrations.CreateModel(
            name='HistoObs',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('src_obs_id', models.BigIntegerField(verbose_name='obs_id source')),
                ('target_obs_id', models.BigIntegerField(verbose_name='obs_id modifiée')),
            ],
            options={
                'db_table': 'histo_obs',
                'indexes': [models.Index(fields=['src_obs_id', 'target_obs_id'], name='histo_obs_target'), models.Index(fields=['target_obs_id', 'src_obs_id'], name='histo_obs_src')],
            },
        ),
        migrations.AddConstraint(
            model_name='histoobs',
            constraint=models.UniqueConstraint(fields=('src_obs_id', 'target_obs_id'), name='unique_histo_obs_mapping'),
        ),
        migrations.AddIndex(
            model_name='histoextremes',
            index=models.Index(fields=['target_x_id', 'id'], name='histo_x_src'),
        ),
        migrations.AddIndex(
            model_name='histoextremes',
            index=models.Index(condition=models.Q(('src_min_obs_id__isnull', False)), fields=['src_min_obs_id', 'target_x_id'], name='histo_x_target_min'),
        ),
        migrations.AddIndex(
            model_name='histoextremes',
            index=models.Index(condition=models.Q(('src_max_obs_id__isnull', False)), fields=['src_max_obs_id', 'target_x_id'], name='histo_x_target_max'),
        ),
        migrations.AddField(
            model_name='extreme',
            name='mesure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.mesure'),
        ),
        migrations.AddField(
            model_name='extreme',
            name='poste',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.poste'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['poste_id', '-date_local', 'mesure_id'], name='obs_pid'),
        ),
        migrations.AddIndex(
            model_name='extreme',
            index=models.Index(fields=['poste_id', '-date_local'], name='extremes_pid'),
        ),
    ]
