# Generated by Django 5.0.2 on 2024-04-29 14:18

import app.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('time', app.models.DateTimeFieldNoTZ(max_length=30, verbose_name="date'")),
                ('timeend', app.models.DateTimeFieldNoTZ(max_length=30, verbose_name="date'")),
                ('text', models.CharField(max_length=100, verbose_name='source')),
                ('tags', models.CharField(max_length=100, verbose_name='source')),
            ],
            options={
                'db_table': 'annotations',
            },
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_utc', app.models.DateTimeFieldNoTZ(max_length=30, verbose_name='date')),
                ('source', models.CharField(max_length=100, verbose_name='source')),
                ('level', models.CharField(max_length=20, verbose_name='niveau')),
                ('reason', models.TextField(verbose_name='raison')),
                ('details', models.JSONField(default=dict, verbose_name='details')),
                ('active', models.BooleanField(default=True, null=True, verbose_name='active')),
            ],
            options={
                'db_table': 'incidents',
            },
        ),
        migrations.CreateModel(
            name='Mesure',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la mesure')),
                ('json_input', models.CharField(max_length=20, null=True, verbose_name='Clé utilisée dans le json')),
                ('json_input_bis', models.CharField(max_length=20, null=True, verbose_name='Autre clé utilisée dans le json')),
                ('archive_col', models.CharField(max_length=20, null=True, verbose_name='nom colonne table weewx.archive')),
                ('archive_table', models.CharField(default=None, max_length=20, null=True, verbose_name='nom table weewx.archive')),
                ('field_dir', models.SmallIntegerField(null=True, verbose_name='id de la mesure wind dans table weewx.archive')),
                ('max', models.BooleanField(default=True, null=True, verbose_name='Calcul des max')),
                ('min', models.BooleanField(default=True, null=True, verbose_name='Calcul des min')),
                ('agreg_type', models.IntegerField(choices=[(0, 'None'), (1, 'Avg'), (2, 'Sum'), (3, 'Max'), (4, 'Min')], default=0, verbose_name="Type d'agregation des donnees")),
                ('is_wind', models.BooleanField(default=False, null=True, verbose_name='Calcul du wind_dir')),
                ('allow_zero', models.BooleanField(default=True, null=True, verbose_name='Zero est une valeur valide')),
                ('convert', models.JSONField(default=dict, null=True, verbose_name='Conversion')),
            ],
            options={
                'db_table': 'mesures',
            },
        ),
        migrations.CreateModel(
            name='Poste',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('meteor', models.CharField(max_length=50, verbose_name='Code station')),
                ('delta_timezone', models.SmallIntegerField(verbose_name='delta heure locale et UTC')),
                ('data_source', models.IntegerField(choices=[(0, 'None'), (1, 'Meteor Oi'), (2, 'Meteo Fr'), (3, 'Ovpf')], default=0, verbose_name='Source des donnees')),
                ('load_type', models.IntegerField(choices=[(0, 'None'), (1, 'Load From Dump'), (2, 'Load From Json'), (4, 'Load From Dump Then Json'), (8, 'Load Csv For Meteofr'), (16, 'Load Csv For Ovpf')], default=0, verbose_name='Type de chargement des donnees')),
                ('type', models.CharField(default='', max_length=50, null=True, verbose_name='Type de station')),
                ('altitude', models.FloatField(default=0, null=True, verbose_name='Altitude')),
                ('lat', models.FloatField(default=0, null=True, verbose_name='Latitude')),
                ('long', models.FloatField(default=0, null=True, verbose_name='Longitude')),
                ('info', models.JSONField(default=dict, null=True, verbose_name='autre info station')),
                ('stop_date', app.models.DateTimeFieldNoTZ(null=True, verbose_name="Datetime local d'arret de la station")),
                ('other_code', models.CharField(default='', max_length=50, null=True, verbose_name='Autre code utilisé dans la data source')),
                ('owner', models.CharField(default='', max_length=50, null=True, verbose_name='Propriétaire')),
                ('email', models.CharField(default='', max_length=50, null=True, verbose_name='E-Mail')),
                ('phone', models.CharField(default='', max_length=50, null=True, verbose_name='Téléphone')),
                ('quartier', models.CharField(default='', max_length=50, null=True, verbose_name='Addresse')),
                ('city', models.CharField(default='', max_length=50, null=True, verbose_name='Ville')),
                ('country', models.CharField(default='', max_length=50, null=True, verbose_name='Pays')),
                ('comment', models.TextField(default='', null=True, verbose_name='Commentaire')),
                ('last_obs_date_local', app.models.DateTimeFieldNoTZ(default='2000-01-01T00:00:00', null=True, verbose_name='Datetime UTC de derniere reception de donnees')),
                ('last_obs_id', models.BigIntegerField(default=0, null=True, verbose_name='ID obs de la derniere reception de donnees')),
                ('info_sync', models.JSONField(default=dict, null=True, verbose_name='Autre info de synchro')),
            ],
            options={
                'db_table': 'postes',
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name="id de l'observation")),
                ('date_local', app.models.DateTimeFieldNoTZ(verbose_name='datetime locale fin période observation')),
                ('date_utc', app.models.DateTimeFieldNoTZ(verbose_name='datetime UTC fin période observation')),
                ('duration', models.SmallIntegerField(verbose_name='durée mesure')),
                ('value', models.FloatField(verbose_name='valeur')),
                ('qa_value', models.SmallIntegerField(choices=[(0, 'Unset'), (1, 'Validated'), (9, 'Unvalidated')], default=0, verbose_name='Code Qualité')),
                ('mesure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.mesure')),
                ('poste', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.poste')),
            ],
            options={
                'db_table': 'obs',
                'unique_together': {('id', 'date_local')},
            },
        ),
        migrations.CreateModel(
            name='LastObs',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='id du minimum')),
                ('date_local', app.models.DateTimeFieldNoTZ(verbose_name='datetime locale derniere valeur de la mesure')),
                ('value', models.FloatField(verbose_name='valeur')),
                ('mesure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.mesure')),
                ('poste', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.poste')),
            ],
            options={
                'db_table': 'last_obs',
                'indexes': [models.Index(fields=['poste', 'mesure'], name='last_obs_poste_id')],
            },
        ),
        migrations.CreateModel(
            name='XMax',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='id du maximum')),
                ('obs_id', models.BigIntegerField(null=True, verbose_name="id de l'observation")),
                ('date_local', app.models.DateTimeFieldNoTZ(verbose_name="date locale de la fin de la periode d'observation")),
                ('max', models.FloatField(verbose_name='valeur maximum')),
                ('max_time', app.models.DateTimeFieldNoTZ(verbose_name="date locale de l'extrême")),
                ('max_dir', models.SmallIntegerField(null=True, verbose_name='direction du maximum')),
                ('qa_max', models.SmallIntegerField(choices=[(0, 'Unset'), (1, 'Validated'), (9, 'Unvalidated')], default=0, verbose_name='Code Qualité')),
                ('mesure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.mesure')),
                ('poste', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.poste')),
            ],
            options={
                'db_table': 'x_max',
                'indexes': [models.Index(fields=['obs_id', 'date_local'], name='x_max_obs_id')],
            },
        ),
        migrations.CreateModel(
            name='XMin',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='id du minimum')),
                ('obs_id', models.BigIntegerField(null=True, verbose_name="id de l'observation")),
                ('date_local', app.models.DateTimeFieldNoTZ(verbose_name="date locale de la fin de la periode d'observation")),
                ('min', models.FloatField(verbose_name='valeur minimum')),
                ('min_time', app.models.DateTimeFieldNoTZ(verbose_name="date locale de l'extrême")),
                ('qa_min', models.SmallIntegerField(choices=[(0, 'Unset'), (1, 'Validated'), (9, 'Unvalidated')], default=0, verbose_name='Code Qualité')),
                ('mesure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.mesure')),
                ('poste', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.poste')),
            ],
            options={
                'db_table': 'x_min',
                'indexes': [models.Index(fields=['obs_id', 'date_local'], name='x_min_obs_id')],
            },
        ),
    ]
